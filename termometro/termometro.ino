
#include <Wire.h>
#include <Adafruit_MLX90614.h>
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>


//include temperature sensor
Adafruit_MLX90614 mlx = Adafruit_MLX90614(0x5b);

// Hardware SPI (faster, but must use certain hardware pins):
// SCK is LCD serial clock (SCLK) - this is pin 13 on Arduino Uno
// MOSI is LCD DIN - this is pin 11 on an Arduino Uno
// pin 5 - Data/Command select (D/C)
// pin 4 - LCD chip select (CS)
// pin 3 - LCD reset (RST)
Adafruit_PCD8544 display = Adafruit_PCD8544(5, 4, 3);
// Note with hardware SPI MISO and SS pins aren't used but will still be read
// and written to during SPI transfer.  Be careful sharing these pins!
#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2


#define LOGO16_GLCD_HEIGHT 16
#define LOGO16_GLCD_WIDTH  16

// 'matapaco_5110', 84x48px
const unsigned char matapaco [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x03, 0xf0, 0x00, 
  0x00, 0x00, 0x40, 0x00, 0x40, 0x01, 0x87, 0x80, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 
  0x01, 0x8f, 0x80, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x01, 0xfe, 0x01, 0xff, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x01, 0xfe, 0xab, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1c, 
  0x00, 0x03, 0xff, 0xc7, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x03, 0xff, 0x0f, 0xff, 
  0xf8, 0x00, 0x00, 0x00, 0x07, 0x18, 0x00, 0x03, 0xbe, 0x7f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x1f, 
  0xd8, 0x00, 0x03, 0xfe, 0x7f, 0xfd, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xdb, 0x80, 0x07, 0xfc, 0x7b, 
  0xfa, 0xfc, 0xc0, 0x00, 0x07, 0x9c, 0xff, 0x80, 0x0f, 0xf8, 0x7f, 0xf7, 0xff, 0xf0, 0x00, 0x03, 
  0x8c, 0x7e, 0x00, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x03, 0x8c, 0x78, 0x00, 0x0f, 0xc0, 
  0xff, 0xff, 0xff, 0x38, 0x00, 0x73, 0xcc, 0xd8, 0xc0, 0x01, 0x10, 0xff, 0xef, 0x7e, 0x1c, 0x04, 
  0x73, 0xcc, 0xdb, 0xc0, 0x00, 0x00, 0xff, 0xce, 0x78, 0x0e, 0x0e, 0x77, 0xcc, 0xdf, 0x80, 0x00, 
  0x01, 0xff, 0xc0, 0x30, 0x0e, 0x6e, 0x67, 0x6c, 0xde, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x01, 
  0xef, 0x67, 0xed, 0xd8, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x03, 0xe7, 0x67, 0xef, 0x80, 0x00, 
  0x00, 0x7e, 0x3e, 0x00, 0x00, 0x03, 0x87, 0x66, 0x7f, 0x00, 0x00, 0x01, 0xfc, 0x38, 0x00, 0x00, 
  0x03, 0x47, 0xee, 0x3c, 0x00, 0x00, 0x03, 0xf8, 0x70, 0x00, 0x00, 0x03, 0x07, 0xee, 0x30, 0x00, 
  0x00, 0x03, 0x80, 0x70, 0x00, 0x00, 0x03, 0x03, 0xcc, 0x20, 0x00, 0x00, 0x03, 0x80, 0xf0, 0x00, 
  0x00, 0x03, 0xe3, 0xcc, 0x00, 0x00, 0x00, 0x03, 0x80, 0xe0, 0x00, 0x00, 0x07, 0xe3, 0xcc, 0x00, 
  0x00, 0x00, 0x01, 0x80, 0xe0, 0x00, 0x00, 0x07, 0x83, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 
  0x00, 0x00, 0x07, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x06, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0x80, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

// 'matapaco_5110', 84x48px
const unsigned char matapaco2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x03, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x87, 0x80, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x8f, 0x80, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0xfe, 0x01, 0xff, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x01, 0xfe, 0xf3, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  0x00, 0x03, 0xff, 0xf7, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x03, 0xff, 0xef, 0xff, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x03, 0xbe, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x60, 0x00, 0x03, 0xfe, 0x7f, 0xfd, 0xf8, 0x00, 0x00, 0x00, 0x3e, 0x60, 0x00, 0x07, 0xfc, 0x7f, 
  0xfa, 0xfc, 0xc0, 0x00, 0x00, 0x3f, 0x66, 0x00, 0x0f, 0xf8, 0x7f, 0xf7, 0xff, 0xf0, 0x00, 0x06, 
  0x3f, 0x7e, 0x00, 0x0e, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0e, 0x31, 0xfc, 0x00, 0x0c, 0xf0, 
  0xff, 0xff, 0xff, 0x38, 0x00, 0x0e, 0x31, 0xf0, 0x00, 0x01, 0xd8, 0xff, 0xef, 0x7e, 0x1c, 0x00, 
  0xcf, 0x31, 0xe0, 0x00, 0x01, 0x8c, 0xff, 0xce, 0x78, 0x0e, 0x00, 0xcf, 0x31, 0x67, 0x00, 0x00, 
  0x0f, 0xff, 0xc0, 0x30, 0x0e, 0x39, 0xcf, 0x33, 0x7f, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x00, 
  0x39, 0xdf, 0xb3, 0x7e, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x03, 0xb9, 0xdd, 0xb3, 0x70, 0x00, 
  0x00, 0x7f, 0x7e, 0x00, 0x00, 0x07, 0x99, 0x9f, 0xbe, 0x00, 0x00, 0x01, 0xfe, 0x78, 0x00, 0x00, 
  0x0f, 0x1d, 0x9d, 0xfe, 0x00, 0x00, 0x03, 0xfc, 0x70, 0x00, 0x00, 0x0c, 0x1d, 0x98, 0xfc, 0x00, 
  0x00, 0x03, 0xc0, 0xf0, 0x00, 0x00, 0x0c, 0x1f, 0x98, 0xd0, 0x00, 0x00, 0x03, 0xc0, 0xf0, 0x00, 
  0x00, 0x0c, 0x0f, 0xb8, 0xc0, 0x00, 0x00, 0x03, 0xc1, 0xe0, 0x00, 0x00, 0x0c, 0x8f, 0x38, 0x00, 
  0x00, 0x00, 0x01, 0x81, 0xe0, 0x00, 0x00, 0x0f, 0x8f, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 
  0x00, 0x00, 0x0f, 0x0f, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x1c, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x1c, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0x80, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  Serial.begin(9600);

  mlx.begin();  
  display.begin();
  display.clearDisplay();

  display.drawBitmap(0, 0,  matapaco2, 84, 48, BLACK);
  display.display();
  double temp=0;
  double amb=0;
  for (int i = 0; i <= 249; i++) {
    temp=(mlx.readObjectTempC()+temp*i)/(i+1);
    amb=(mlx.readAmbientTempC()+amb*i)/(i+1);
    delay(10);  
    
  }
  temp=temp*1.8+32;
  amb=amb*1.8+32;
  double estimada=(0.001081*temp*temp-0.2318*temp+12.454)*(temp-amb)+temp;

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(0,0);

  display.print("Piel = ");
  display.println(String((temp-32)/1.8));
  display.print("Core = ");
  display.println(String((estimada-32)/1.8));
  display.print("Amb = ");
  display.println(String((amb-32)/1.8));
    
  display.display();
  delay(2000);
  display.clearDisplay();
  delay(50000);
}

void loop() {
  
}
